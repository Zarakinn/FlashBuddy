@startuml class

/' ******* ********** **********
********** GLOBAL
********** ********** ********'/
class Launcher extends javafx.application.Application {
    + void Launcher(String[] args)
    + void start(Stage primaryStage)
}


/' ******* ********** **********
********** VIEW
********** ********** ********'/
package "resources.tn.flashcards" #ffecb8 {
    package fxml {
        object vue.fxml
    }

    package css {
        object style.css
    }
}

package "VisualFactory" #ffecb8 {

    class QRViewFactory
    note right: Pattern Factory
    class QRViewFactory {
        + static QRView createQRView(Card card)
    }

    abstract QRView extends javafx.scene.layout.Pane {}

    class QRTextView extends QRView {
        # Label txt

        + QRTextView(String txt)
    }

    class QRImageView extends QRView {
        # ImageView img

        + QRImageView(String url)
        + void setSize(double height, double width)
    }

    class MyBarChart extends javafx.scene.chart.BarChart {
        MyBarChart(int[] donnees)
    }

    class MyPieChart extends javafx.scene.chart.PieChart {
        MyPieChart(int[] donnees)
    }

    
}

/' ******* ********** **********
********** COMPONENTS
********** ********** ********'/

package "Components" #ffecb8 {
    class ActionButtonTableCell extends javafx.scene.control.TableCell {
        - final Button ActionButton
        + static final String GRADIENT_BTN

        + S getCurrentItem()
        + static forTableColumn()
        + void updtaeItem(Button item, boolean empty)
    }

    class EditCell extends javafx.scene.control.ListCell {
        + void updateItem(Card c, boolean empty)
    }
}

/' ******* ********** **********
********** UTILS
********** ********** ********'/

package "Utils" #dcecc7 {

    class Calculs {
        + static int[] camembert(Pile p)
        + static int[] camembert()
        + static int[] tenLastDays(Pile p)
        - static boolean isSameDay(LocalDateTime d1, LocalDateTime d2)
        - static boolean isLessThanNMinutesBefore(LocalDateTime d1, LocalDateTime d2, int n)
    }
    class FileHandler{
        + static FileChooser getImageFileChooser()
        + static FileChooser getPileFileChooser()
        + static void addDataToZip(ZipOutputStream out, String fileName, byte[] data)
        + static byte[] imageToData(String fileName)
        + static void handleImageExport(ZipOutputStream out, QuestionReponse qr)
        + static void saveStackInZip(Pile p)
        + static Image loadImageFromZip(String path)
        + static Pile LoadStackFromZip(Window w)
    }

    class DateFormat {
        + static DateTimeFormatter getDateTimeFormatter()
        + static DateTimeFormatter getDayFormater()
    }
}

/' ******* ********** **********
********** CONTROLLER
********** ********** ********'/
package "controller" #90d2d8 {

    interface Observateur {
        + void reagir()
    }

    class Controller implements javafx.fxml.Initializable, Observateur {
        +void initialize(URL location, ResourceBundle resources)
    }

}

/' ******* ********** **********
********** MODEL
********** ********** ********'/
package "model" #f6a6b2 {

    class SujetObserve {
        + void ajouterObservateur(Observateur observateur)
        + void notifierObservateur()
    }

    class Data extends SujetObserve {
        - Data instance
        - Data()
        + static Data getInstance()
        + Pile getAPile(String id)
        - void addPile(Pile p)
        + Pile createPile(r)
        + Pile clonePile(Pile p)
        + Card cloneCard(Card c)
        + Card createDefaultCard(String pileId)
        + Card createCard(String pileId, QRType qType, String question, QRType rType, String reponse)
        + void deleteCard(Pile p, Card c)
        + void deletePile(Pile p)
        + void scoreCard(int score)
    }
    class Data
    note right: Pattern Singleton

    enum Mode {
        APPRENTISSAGE_SELECTION
        PARTIE_EN_COURS
        EDITION_SELECTION
        STATS
        PARAM
        EDIT_PILE
    }

    

    package pile {

        class Pile {
            # String name
            # String desc
            # String uniqueId
            # String creator
            # String tags
            # int nextCardId

            + void addCard()
        }

        class Card {
            # Int id
        }

        class QuestionRéponse {
            # String content
        }

        enum QRType {
            TEXT 
            IMAGE
        }
    }

    package stats {
        class StatsPile {
            # String pileId
            # int noJeuxPile
            # int noJeuxCarte
            # LocalDateTime lastOpened

            + void incrNoJeuxPile()
            + void incrNoJeuxCarte()
            + String getLastOpenedFormatted()
            + void updateLastOpened()
            + void addPlayed(int cardId, FullStats played)
            + LastStats getPlayed(int cardId)
        }

        class LastStats {
            # LocalDateTime playDate
            # int difficulty

            + String getPlayDateFormatted()
        }

        class FullStats extends LastStats {
            # int cardId

            + LastStats copyAsLastStats()
        }

        


    }

    package settings {

        class Settings {
            # int timerAffichage
            # String auteurParDefaut
        }

        interface StrategyChoix
        note right: Pattern Strategy
        interface StrategyChoix {
            + void execute()
        }

        class StrategyChoixProba implements StrategyChoix{
            + void execute()
        }

        class StrategyChoixProbaEgales implements StrategyChoix{
            + void execute()
        }

        enum Theme {
            CLAIR
            FONCE
        }
    }

}

/' ******* ********** **********
********** RELATIONS
********** ********** ********'/

' GLOBAL
Launcher -->"1" vue.fxml
Launcher -->"1" style.css

' VC
vue.fxml -->"1" Controller

' CM
SujetObserve *-->"..*" Observateur


' CONTROLLER
Controller --> QRViewFactory
Controller --> MyBarChart
Controller --> MyPieChart
Controller --> ActionButtonTableCell
Controller --> EditCell

' MODEL
Pile *--"..*" Card
Card *-->"2" QuestionRéponse
QuestionRéponse -->"1" QRType

Data *-->"..*" Pile
Data -->"1" Settings
Data *-->"..* [HashMap]" StatsPile
Data -->"1" Mode

Settings -->"1" Theme
Settings -->"1" StrategyChoix

StatsPile *-->"..* [HashMap]" LastStats
StatsPile *-->"..*" FullStats

' HIDDEN
javafx.fxml.Initializable -d[hidden]-> Observateur
MyBarChart -r[hidden]-> QRView
MyPieChart -l[hidden]-> MyBarChart
javafx.scene.layout -l[hidden]-> javafx.scene.chart.BarChart
QRImageView -d[hidden]-> DateFormat
QRImageView -r[hidden]-> EditCell
javafx.scene.layout.Pane -u[hidden]-> javafx.scene.chart.BarChart



@enduml