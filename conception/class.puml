@startuml class

class Launcher extends javafx.application.Application {
    + void Launcher(String[] args)
    + void start(Stage primaryStage)
}

package resources.tn.flashcards.fxml {

    object main_view.fxml {
    }

    object edit_view.fxml {
    }

    object parameter_view.fxml {
    }

    object stats_view.fxml {
    }

    object training_view.fxml {
    }

}



package view {

    class QRViewFactory {
        +Pane createQRView(Card card)
    }

    abstract QRView extends javafx.scene.layout.Pane {}

    class QRTextView extends QRView {
        # Label txt
        
        + QRTextView(String txt)
    }

    class QRImageView extends QRView {
        # ImageView img
        
        + QRImageView(String url)
    }
}

package controller {

    interface Observateur {
        + void reagir()
    }

    class MainController implements javafx.fxml.Initializable, Observateur {
        +void initialize(URL location, ResourceBundle resources)
    }

    class EditController implements javafx.fxml.Initializable, Observateur {
        +void initialize(URL location, ResourceBundle resources)
    }

    class ParameterController implements javafx.fxml.Initializable, Observateur {
        +void initialize(URL location, ResourceBundle resources)
    }

    class StatsController implements javafx.fxml.Initializable, Observateur {
        +void initialize(URL location, ResourceBundle resources)
    }

    class TrainingController implements javafx.fxml.Initializable, Observateur {
        +void initialize(URL location, ResourceBundle resources)
    }

    MainController --> EditController
    MainController --> ParameterController
    MainController --> StatsController
    MainController --> TrainingController

}

TrainingController --> QRViewFactory


package model {

    class SujetObserve {
        + void ajouterObservateur(Observateur observateur)
        + void notifierObservateur()
    }

    class Data extends SujetObserve {
        - Data instance
        - Data()
        + static Data getInstance()
    }
    class Data
    note right: Pattern Singleton

    package pile {

        class Pile {
            # String name
            # String uniqueId
            # String creator

            '+ void nextCard()'

            + void addCard()
        }

        class Card {
            # Int id
        }

        class QuestionRéponse {
            # String content
        }

        enum QRType {}

        Pile *--"..*" Card
        Card *--"2" QuestionRéponse
        QuestionRéponse -->"1" QRType
    }

    package stats {
        class StatsPile {
            # String pileId
            # Int noJeuxPile
            # Int noJeuxCarte
            # Date lastOpened
        }

        class LastStats {
            # Date playDate
            # Int difficulty
        }

        class FullStats extends LastStats {
            # Int cardId
        }

        class DataFormat {
            + static DateTimeFormatter getDateTimeFormatter()
        }

        StatsPile -->"1 [HashMap]" LastStats
        StatsPile -->"1 [ArrayList]" FullStats
        

    }

    package settings {

        class Settings {}

        interface StrategyChoix {
            + void execute()
        }

        class StrategyChoixProba implements StrategyChoix{
            + void execute()
        }

        class StrategyChoixTemps implements StrategyChoix{
            + void execute()
        }

        enum AlgoAffichage {
            TEMPS
            CLIC
        }

        enum Theme {
            CLAIR
            FONCE
            CONTRASTE
        }

        Settings -->"1" StrategyChoix
        Settings -->"1" AlgoAffichage
        Settings -->"1" Theme
    }

    Data *-->"..*" Pile
    Data *-->"1" Settings
    Data *-->"..*" StatsPile
        
}



SujetObserve *-->"*" Observateur

Launcher -->"1" main_view.fxml

main_view.fxml -->"1" MainController
edit_view.fxml -->"1" EditController
parameter_view.fxml -->"1" ParameterController
training_view.fxml -->"1" TrainingController
stats_view.fxml -->"1" StatsController

/'MainController *--"1" DataController
MainController *--"1" QuestionRéponseController



DataController *--"1" Data

Data *--"1" User'/


@enduml