@startuml class

class Launcher extends javafx.application.Application {
    + void Launcher(String[] args)
    + void start(Stage primaryStage)
}

package resources.tn.flashcards.fxml {

    object main_view.fxml {
    }

    object edit_view.fxml {
    }

    object parameter_view.fxml {
    }

    object stats_view.fxml {
    }

    object training_view.fxml {
    }

}

interface Observateur {
        + void refresh()
    }

package view {

    class QRViewFactory {
        +Pane createQRView(Card card)
    }

    abstract QRView implements javafx.scene.layout.Pane {}

    class QRTextView extends QRView {
        # Label txt
        
        + QRTextView(String txt)
    }

    class QRImageView extends QRView {
        # ImageView img
        
        + QRImageView(String url)
    }
}

package controller {

    class MainController implements javafx.fxml.Initializable, Observateur {
        +void initialize(URL location, ResourceBundle resources)
    }

    class EditController implements javafx.fxml.Initializable, Observateur {
        +void initialize(URL location, ResourceBundle resources)
    }

    class ParameterController implements javafx.fxml.Initializable, Observateur {
        +void initialize(URL location, ResourceBundle resources)
    }

    class StatsController implements javafx.fxml.Initializable, Observateur {
        +void initialize(URL location, ResourceBundle resources)
    }

    class TrainingController implements javafx.fxml.Initializable, Observateur {
        +void initialize(URL location, ResourceBundle resources)
    }

    MainController --> EditController
    MainController --> ParameterController
    MainController --> StatsController
    MainController --> TrainingController

}

TrainingController --> QRViewFactory

class SujetObserve {
        + void addObs(Observateur obs)
        + void refreshAllObs()
    }

    package commands {

        interface Command {
            + void execute()
        }

        class addPileCommand extends Command {
            + void execute()
        }

        class addCardCommand extends Command {
            + void execute()
        }

        class getNextQuestion extends Command {
            + void execute()
        }

        class getAnswer extends Command {
            + void execute()
        }
    }

    EditController *--> Command
    ParameterController *--> Command
    TrainingController *--> Command
    StatsController *--> Command

package model {

    class Data extends SujetObserve {
        - Data instance
        - Data()
        + static Data getInstance()
    }
    class Data
    note right: Pattern Singleton

    package pile {

        class Pile {
            # String name
            # String uniqueId
            # String creator

            '+ void nextCard()'

            + void addCard()
        }

        class Card {
            # Int id

            '+ Pane show()'
            '+ void turn()'
        }

        interface QuestionRéponse {
            '+ Pane show()'
            '+ void evaluate(int a)'

            '+ void edit(QuestionRéponse newValue)'
        }

        class QRText implements QuestionRéponse {}

        class QRImage implements QuestionRéponse {}

        Pile *--"..*" Card
        Card *--"2" QuestionRéponse
        'QuestionRéponseController *--"1" Data'
    }

    package stats {
        class StatsPile {
            # String pileId
            # Int noJeuxPile
            # Int noJeuxCarte
            # Date lastOpened
        }

        class LastStats {
            # Date playDate
            # Int difficulty
        }

        class FullStats extends LastStats {
            # Int cardId
        }

        class DataFormat {
            + static DateTimeFormatter getDateTimeFormatter()
        }

        StatsPile -->"1 [HashMap]" LastStats
        StatsPile -->"1 [ArrayList]" FullStats

    }

    package settings {

        class Settings {}

        enum AlgoChoix {
            TEMPS
            PROBA
        }

        enum AlgoAffichage {
            TEMPS
            CLIC
        }

        enum Theme {
            CLAIR
            FONCE
            CONTRASTE
        }

        Settings -->"1" AlgoChoix
        Settings -->"1" AlgoAffichage
        Settings -->"1" Theme
    }

    

    /'class DataController {
        + void open(URL file)
        + void saveAs(URL file)
        + void save()

        + void newPile()
        + void newCardInCurrentPile()
        + void rmCurrentPile()
        + void rmCurrentCard()
    }

    class QuestionRéponseController {
        + void changeQRForText()
        + void editText()

        + void changeQRForImage()
        + void editImage()

        + void evaluate(int a)
    }'/


    /'package user {
        class User {
            # String name
        }

        package lastPlayed {

            note "Est utilisé pour afficher la\nprochaine carte (calcul rapide)\nOn overwrite à chaque\napparition de la carte" as N1

            class LastPlayed {
                # String pileId
            }

            class Played {
                # Date playDate
                # Int difficulty
            }
        }

        User *--"..*" Stats
        User *--"1" Preferences
        User *--"..* [HashMap]" LastPlayed
        Stats *--"1" StatApprent
        Stats *--"1" QuickStat
        LastPlayed *--"..* [HashMap]" Played                                                                                                                                                                                                                                                                                           
        
    }'/

    Data *-->"..*" Pile
    Data *-->"1" Settings
    Data *-->"..*" StatsPile
}



SujetObserve *-->"*" Observateur

Launcher -->"1" main_view.fxml

main_view.fxml -->"1" MainController
edit_view.fxml -->"1" EditController
parameter_view.fxml -->"1" ParameterController
training_view.fxml -->"1" TrainingController
stats_view.fxml -->"1" StatsController

/'MainController *--"1" DataController
MainController *--"1" QuestionRéponseController



DataController *--"1" Data

Data *--"1" User'/


@enduml